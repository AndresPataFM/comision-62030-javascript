/* Consigna
‚úÖ Crear un constructor de productos con una estructura b√°sica (Ej: c√≥digo, descripci√≥n, stock, precio unitario).
‚úÖ Luego, crea una funci√≥n a trav√©s de la cual puedas solicitar datos al usuario para dar de alta un nuevo producto, en base a las propiedades definidas en el constructor anterior.
‚úÖ Con toda la informaci√≥n recopilada, instancia la Clase JS para crear un nuevo producto con la informaci√≥n que recopilaste, y agrega este nuevo producto, a un array de productos.
‚úÖ Utiliza console.table(productos), para obtener un Preview del array, por cada nuevo producto que agregas.
*/
/* Tips
üí° Recopila la informaci√≥n del producto, utilizando el cuadro de di√°logo Prompt().
üí° Ten presente que el precio del producto, debe guardarse como un n√∫mero, y puede contener decimales: (utiliza las funciones acordes para controlar que se guarde correctamente esta informaci√≥n.
üí° Ten presente tambi√©n que, el c√≥digo del producto, de ser num√©rico, se debe guardar como un n√∫mero entero. Utiliza la funci√≥n acorde para que as√≠ sea
*/

class Producto{
    constructor(codigo, desc, stock, precio){
        this.codigo = codigo
        this.descripcion = desc
        this.stock = stock
        this.precio = precio
    }
}

const productos = []
let loop = true

function agregarProductos(){
    // que no se repita y sea un nro entero positivo igual o mayor a 0
    let codigo = parseInt(prompt("codigo"))
    // que no sea un string vacio
    let descripcion = prompt("descripcion")
    // que sea un nro entero mayor o igual a 0
    let stock = parseInt(prompt("stock"))
    // que sea un nro entero mayor o igual a 0
    let precio = parseFloat(prompt("precio")).toFixed(2)

    productos.push(new Producto(codigo, descripcion, stock, precio))
    console.log(productos)
}

alert("usted va a agregar productos")
while(loop){
    agregarProductos()
    loop = confirm("¬øDesea agregar otro producto?")
}



