/* Consigna
âœ… Crear un constructor de productos con una estructura bÃ¡sica (Ej: cÃ³digo, descripciÃ³n, stock, precio unitario).
âœ… Luego, crea una funciÃ³n a travÃ©s de la cual puedas solicitar datos al usuario para dar de alta un nuevo producto, en base a las propiedades definidas en el constructor anterior.
âœ… Con toda la informaciÃ³n recopilada, instancia la Clase JS para crear un nuevo producto con la informaciÃ³n que recopilaste, y agrega este nuevo producto, a un array de productos.
âœ… Utiliza console.table(productos), para obtener un Preview del array, por cada nuevo producto que agregas.
*/
/* Tips
ðŸ’¡ Recopila la informaciÃ³n del producto, utilizando el cuadro de diÃ¡logo Prompt().
ðŸ’¡ Ten presente que el precio del producto, debe guardarse como un nÃºmero, y puede contener decimales: (utiliza las funciones acordes para controlar que se guarde correctamente esta informaciÃ³n.
ðŸ’¡ Ten presente tambiÃ©n que, el cÃ³digo del producto, de ser numÃ©rico, se debe guardar como un nÃºmero entero. Utiliza la funciÃ³n acorde para que asÃ­ sea
*/
class Producto {
    constructor(codigo, nombre, stock, precioUnitario){
        this.codigo = codigo;
        this.nombre = nombre;
        this.stock = stock;
        this.precioUnitario = precioUnitario;
    }
}

const productos = []

const verificarCodigo = ()=>{
    let codigo = prompt("Ingrese el cÃ³digo del producto")
    while(codigo==="" || codigo === null){
        codigo = prompt("Ingrese el cÃ³digo del producto. No tiene que ser vacio y debe ingresar un dato.")
    }
    if(productos.some((producto)=>{
        return producto.codigo === codigo
    })){
        alert("El cÃ³digo tiene que ser Ãºnico.")
        return verificarCodigo()
    }
    return codigo
}

const verificarNombre = ()=>{
    let nombre = prompt("Ingrese el nombre del producto")
    while(nombre==="" || nombre === null){
        nombre = prompt("Ingrese el nombre del producto. No tiene que ser vacio y debe ingresar un dato.")
    }
    return nombre
}

const verificarStock = ()=>{
    let stockBase = prompt("Ingrese el stock del producto")
    while(stockBase==="" || stockBase === null){
        stockBase = prompt("Ingrese el stock del producto. No tiene que ser vacio y debe ingresar un dato.")
    }
    let stock = parseInt(stockBase)
    if(stock<0 || isNaN(stock)){
        alert("El stock tiene que ser un nÃºmero mayor o igual a 0")
        return verificarStock()
    }

    return stock
}

const verificarPrecio = ()=>{
    let precioBase = prompt("Ingrese el precio del producto")
    while(precioBase==="" || precioBase === null){
        precioBase = prompt("Ingrese el precio del producto. No tiene que ser vacio y debe ingresar un dato.")
    }
    let precio = Number(precioBase)
    if(precio<0 || isNaN(precio)){
        alert("El precio tiene que ser un nÃºmero mayor o igual a 0")
        return verificarPrecio()
    }

    return precio
}

const agregarProductos = ()=>{
    alert("Usted va a agregar un nuevo producto al sistema")
    let codigo = verificarCodigo() // verificar que este sea Ãºnico
    let nombre = verificarNombre() // verificar que no sea un string vacio ni nÃºmero
    let stock = verificarStock() // Que sea un nÃºmero mayor o igual a 0, que sean enteros
    let precio = verificarPrecio() // que sea mayor a cero, posiblemente a 2 decimales

    const nuevoProducto = new Producto(codigo, nombre, stock, precio)
    productos.push(nuevoProducto)
    console.table(productos)
}

function app(){
    let loop = true
    while(loop){
        agregarProductos()
        loop = confirm("Â¿Desea agregar otro producto?")
    }
}

app()


